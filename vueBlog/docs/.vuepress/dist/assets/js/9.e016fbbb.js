(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{215:function(t,a,s){"use strict";s.r(a);var r=s(0),v=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"quic-v2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#quic-v2"}},[t._v("#")]),t._v(" QUIC v2")]),t._v(" "),s("p",[t._v("为了尽力专注于QUIC的核心特性，以及为了赶上发布进度，最初计划为核心协议一部分的几个特性已被推迟，计划到QUIC第二版或以后的版本中完成。")]),t._v(" "),s("p",[t._v("本文档的作者买的水晶球是山寨的，所以我们不能知道哪些特性会或者不会出现在第二版中。但我们可以谈谈那些在第一版中被标记为“之后做”的可能出现在第二版中的特性。")]),t._v(" "),s("h3",{attrs:{id:"前向纠错"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前向纠错"}},[t._v("#")]),t._v(" 前向纠错")]),t._v(" "),s("p",[t._v("前向纠错（FEC）是一种通过向接收方发送冗余数据，使得接收方能快速识别出含有不明显错误的一种错误控制方式。")]),t._v(" "),s("p",[t._v("Google在它们的原版QUIC成果中实验过该特性，但由于实验结果不理想而已经去除。此特性可供QUIC v2讨论，但可能需要有人证明它在代价不大的情况下确实有用。")]),t._v(" "),s("h3",{attrs:{id:"多路径"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多路径"}},[t._v("#")]),t._v(" 多路径")]),t._v(" "),s("p",[t._v("多路径意味着传输本身可以使用多个网络路径来最大程度地利用资源并增加冗余。")]),t._v(" "),s("p",[t._v("世界上支持SCTP的人都喜欢提到SCTP已经具有多路径功能，现代TCP也是如此。")]),t._v(" "),s("h3",{attrs:{id:"不可靠数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#不可靠数据"}},[t._v("#")]),t._v(" 不可靠数据")]),t._v(" "),s("p",[t._v("通过QUIC传输不可靠的数据流也得到过广泛讨论，这样QUIC就能在传统UDP风格的应用程序中作为替代品。")]),t._v(" "),s("h3",{attrs:{id:"非http适应"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#非http适应"}},[t._v("#")]),t._v(" 非HTTP适应")]),t._v(" "),s("p",[t._v("基于QUIC的DNS是早期被提出的非HTTP协议之一，这可能在QUIC v1和HTTP/3发布后得到更多的关注。但我想，如果我们拥有了这样的新型传输层协议，DNS远不是终点。")])])}),[],!1,null,null,null);a.default=v.exports}}]);